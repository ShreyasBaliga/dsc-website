{"version":3,"sources":["webpack:///./src/components/LandingPage/index.js","webpack:///./src/components/About/index.js","webpack:///./src/components/techstacks/index.js","webpack:///./src/components/getcnnected/index.js","webpack:///./src/components/footer/index.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/Header/header.js","webpack:///./src/components/layout.js"],"names":["LandingPage","_ref","props","react_default","a","createElement","gatsby_browser_entry","query","render","data","className","style","container","content","title","sahyadri","Landingpagecontent","landingfooter","herobutton","solid","gatsby_image_default","fluid","imageSecond","childImageSharp","hero1","imageFirst","hero2","_2488236830","About","wrapper","image","about","aboutwrap","titlewrap","dsc","underline","buttonspace","aboutbutton","_2096325399","techstacks","cardholder","card","android","cardtitle","cardcontent","imageThird","imageFour","cardholder2","_922437057","getconncted","info","_3061633381","footer","social","guide","address","addresses","cp","bottom","_1017836714","IndexPage","layout","seo","keywords","components_LandingPage","components_About","components_techstacks","getcnnected","components_footer","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","Consumer","staticQueryData","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","property","author","concat","length","join","defaultProps","arrayOf","Header","Fragment","Menu","dsc_logo","list","ullist","links","activeClassName","activelink","to","_1348365896","Layout","header","_755544856","node"],"mappings":"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","file":"component---src-pages-index-js-c7f893b335a64cb999b6.js","sourcesContent":["import React from \"react\";\nimport style from \"./style.module.css\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport Img from \"gatsby-image\";\nimport { Link } from \"gatsby\"\n\nconst LandingPage = ({ props }) => (\n  <StaticQuery\n    query={graphql`\n      fragment LandingSiteImages on File {\n        childImageSharp {\n          fluid(maxWidth: 500) {\n            ...GatsbyImageSharpFluid_tracedSVG\n          }\n        }\n      }\n      query {\n        imageFirst: file(relativePath: { eq: \"hero2.png\" }) {\n          ...LandingSiteImages\n        }\n        imageSecond: file(relativePath: { eq: \"hero1.png\" }) {\n          ...LandingSiteImages\n        }\n      }\n    `}\n    render={data => (\n      <div>\n      <div className={style.container}>\n        <div className={style.content}>\n          <p className={style.title}>Developer Students Club</p>\n          <br />\n          <p className={style.sahyadri}>Sahyadri</p>\n\n          <br />\n          <br />\n          <p className={style.Landingpagecontent}>\n            Provide native app and Web Development skills for Students to Help{\" \"}\n            them work towards Employability\n          </p>\n          <div className={style.landingfooter}>\n     \n        <button className={style.herobutton}>Learn More</button>\n     </div>\n        </div>\n        <div className={style.solid}>\n          <Img\n            fluid={data.imageSecond.childImageSharp.fluid}\n            className={style.hero1}\n          />\n          <Img\n            fluid={data.imageFirst.childImageSharp.fluid}\n            className={style.hero2}\n          />\n        </div>\n        \n\n        \n      </div>\n      \n     \n      </div>\n    )}\n  />\n);\n\nexport default LandingPage;\n","import React from \"react\";\nimport style from \"./Style.module.css\"\nimport { StaticQuery, graphql } from \"gatsby\";\nimport Img from \"gatsby-image\";\n\nconst About =({ props })=> (\n    \n    <StaticQuery\n    query={graphql`\n    fragment AboutSiteImages on File {\n      childImageSharp {\n        fluid(maxWidth: 1000) {\n          ...GatsbyImageSharpFluid_tracedSVG\n        }\n      }\n    }\n    query{\n    imageFirst: file(relativePath: { eq: \"about.png\" }) {\n      ...AboutSiteImages\n    }\n  \n\n      }\n    `}\n      render ={data => (\n          <div className={style.container}>\n              <div>\n             \n              </div>\n              <div className={style.wrapper}>\n              <div className={style.image}>\n              <Img\n            fluid={data.imageFirst.childImageSharp.fluid}\n            className={style.about}\n          />\n          </div>\n          <div className={style.aboutwrap}>\n          <div className={style.titlewrap}><p className={style.title}>About </p><p className={style.dsc}> DSC</p></div> \n              <div className={style.underline}></div>\n              <p className={style.content}>The Developer Student Clubs (DSC) program is a grassroots channel through which we provide development \n              skills for students, towards employability. In addition to workshops, we also provide an opportunity for students to apply their newly \n              gained skills to develop solutions for local organizations, and then provide visibility via showcases.\n          </p>\n          <div className={style.buttonspace}><button className={style.aboutbutton}>Learn More</button></div>\n          </div>\n             \n\n              </div>\n              \n\n          </div>\n      )}\n\n\n/>\n);\n\nexport default About;\n","import React from \"react\";\nimport style from \"./style.module.css\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport Img from \"gatsby-image\";\n\nconst techstacks = ({ props }) => (\n    <StaticQuery\n      query={graphql`\n      fragment techstackSiteImages on File {\n        childImageSharp {\n          fluid(maxWidth: 1000) {\n            ...GatsbyImageSharpFluid_tracedSVG\n          }\n        }\n      }\n      query{\n      imageFirst: file(relativePath: { eq: \"android.jpg\" }) {\n        ...techstackSiteImages\n      }\n      imageSecond: file(relativePath: { eq: \"web.jpg\" }) {\n        ...techstackSiteImages\n      }\n      imageThird: file(relativePath: { eq: \"ml.jpg\" }) {\n        ...techstackSiteImages\n      }\n      imageFour: file(relativePath: { eq: \"cld.jpg\" }) {\n        ...techstackSiteImages\n      }\n    \n  \n        }\n      `}\n      render={data => (\n        <div className={style.container}>\n        <div>\n        <p className={style.title}>Techstacks We're Excited About </p>\n        <center>\n        <div className={style.underline}></div>\n        </center>\n        </div>\n        <div className={style.cardholder}>\n        <div className={style.card}>\n        <div className={style.image}>\n        <Img\n                fluid={data.imageFirst.childImageSharp.fluid}\n                className={style.android}\n              />\n        <p className={style.cardtitle}>Android Development</p>\n        <p className={style.cardcontent}>mastering the latest trends in modern Android development.Every year Google developers release exciting new updates .</p>\n        <center><button className={style.herobutton}>Learn More</button></center>\n        </div>\n          </div>\n        <div className={style.card}><div className={style.image}>\n        <Img\n                fluid={data.imageSecond.childImageSharp.fluid}\n                className={style.android}\n              />\n        <p className={style.cardtitle}>Web Development</p>\n        <p className={style.cardcontent}>mastering the latest trends in modern Android development. Every year Google developers release exciting new updates </p>\n        <center><button className={style.herobutton}>Learn More</button></center>\n        </div></div>\n        <div className={style.card}>\n        <div className={style.image}>\n        <Img\n                fluid={data.imageThird.childImageSharp.fluid}\n                className={style.android}\n              />\n        <p className={style.cardtitle}>Machine Learning</p>\n        <p className={style.cardcontent}>mastering the latest trends in modern Android development.Every year Google developers release exciting new updates </p>\n        <center><button className={style.herobutton}>Learn More</button></center>\n        </div>\n        </div>\n        <div className={style.card}>\n        <div className={style.image}>\n        <Img\n                fluid={data.imageFour.childImageSharp.fluid}\n                className={style.android}\n              />\n        <p className={style.cardtitle}>Cloud Computing</p>\n        <p className={style.cardcontent}>mastering the latest trends in modern Android development.Every year Google developers release exciting new updates </p>\n        <center><button className={style.herobutton}>Learn More</button></center>\n        </div>\n        </div>\n        \n        </div>\n        <div className={style.cardholder2}>\n        \n        </div>\n        </div>\n      )}\n    />\n  );\n  export default techstacks;","import React from 'react';\nimport style from \"./style.module.css\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport Img from \"gatsby-image\";\n\nconst getconncted =( {data} )=>(\n\n<StaticQuery\n    query={graphql`\n    fragment gcSiteImages on File {\n      childImageSharp {\n        fluid(maxWidth: 1000) {\n          ...GatsbyImageSharpFluid_tracedSVG\n        }\n      }\n    }\n    query{\n    imageFirst: file(relativePath: { eq: \"gc.png\" }) {\n      ...gcSiteImages\n    }\n  \n\n      }\n    `}\n    \n      render ={data=>(\n          <div className={style.container}>\n              <div className={style.content}>\n              <div className={style.image}>\n              <Img\n            fluid={data.imageFirst.childImageSharp.fluid}\n            className={style.about}\n          />\n              </div>\n              <div>\n              <p className={style.title}> Get connected.</p>\n              <div className={style.underline}></div>\n              <p className={style.info}>Meet people with similar interest to work together on projects and host events to build a better collaborative environment. We are more than 100 members with interests on various fields of technology here to know each other and get connected. \n              Meet our members to know more about us and build something cool!</p>\n              <button className={style.aboutbutton}>Learn More</button>\n              </div>\n              </div>\n\n\n\n          </div>\n      )}\n      />\n);\n\nexport default getconncted;","import React from 'react';\nimport style from './style.module.css';\nimport { StaticQuery, graphql } from \"gatsby\";\nimport Img from \"gatsby-image\";\n \nconst footer = ({data})=>(\n    <StaticQuery \n    \n    query={graphql`\n    fragment footerSiteImages on File {\n      childImageSharp {\n        fluid(maxWidth: 1000) {\n          ...GatsbyImageSharpFluid_tracedSVG\n        }\n      }\n    }\n    query{\n    imageFirst: file(relativePath: { eq: \"logo3.png\" }) {\n      ...footerSiteImages\n    }\n  \n\n      }\n    `}\n\n    render ={ data =>(\n\n\n        <div>\n        <div className={style.container}>\n    \n        <div className={style.content}>\n        <div className={style.social}>\n        <p>Github</p>\n        <p>Linkedin</p> \n        <p>Instagram</p>\n\n        </div>\n        <div className={style.guide}>\n        <p>Community Guidelines</p>\n        <p> Code of Conduct</p>\n        </div>\n        <div className={style.address}>\n        <p className={style.title}>Developer Students Club Sahyadri</p>\n        <p className={style.addresses}> \nSahyadri College of Engineering and Management, Adyar, Mangalore - 575007 IN</p>\n<p>sosc@sahyadri.edu.in <br />\n+91 9539518599\n</p>\n        </div>\n        </div>\n\n\n        </div>\n\n        <div className={style.cp}>\n        <center>\n            <p className={style.bottom}>DSCS@2019</p>\n            </center></div>\n        </div>\n    )\n\n\n\n    }\n    \n    \n    \n    />\n\n)\n\n\nexport default footer;","import React from \"react\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport LandingPage from '../components/LandingPage/index'\nimport About from '../components/About/index'\nimport Techstacks from '../components/techstacks/index'\nimport Getconncted from '../components/getcnnected/index'\nimport Footer from '../components/footer/index'\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\n\n    <LandingPage />\n   <About />\n  <Techstacks />\n  <Getconncted />\n  <Footer />\n    </Layout>\n)\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\";\nimport style from \"./Style.module.css\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport Img from \"gatsby-image\";\nimport { Link } from \"gatsby\"\nconst Header = ({ props }) => (\n  <StaticQuery\n    query={graphql`\n    fragment firstSiteImages on File {\n      childImageSharp {\n        fluid(maxWidth: 1000) {\n          ...GatsbyImageSharpFluid_tracedSVG\n        }\n      }\n    }\n    query{\n    imageFirst: file(relativePath: { eq: \"dsc-logo2.png\" }) {\n      ...firstSiteImages\n    }\n  \n\n      }\n    `}\n    render={data => (\n      <header>\n        <>\n          <div className={style.Menu}>\n          <div className={style.titlewrap}>\n            <div className={style.image}>\n              <Img\n                fluid={data.imageFirst.childImageSharp.fluid}\n                className={style.dsc_logo}\n              />\n             \n            </div>\n            <p className={style.title}>DSCS</p>\n           </div>\n            <div className={style.list}>\n              <ul className={style.ullist}>\n                <div><Link className={style.links} activeClassName={style.activelink}       to=\"/\">Home</Link></div>\n                <div> <Link className={style.links}  activeClassName={style.activelink}  to=\"/Events\">Events</Link></div>\n                <div><Link className={style.links}  activeClassName={style.activelink}  to=\"/page-2/\">Team</Link></div>\n                <div>  <Link  className={style.links}  activeClassName={style.activelink}  to=\"/Blogs\">Blogs</Link></div>\n              </ul>\n            </div>\n          </div>\n        </>\n      </header>\n    )}\n  />\n);\n\nexport default Header;\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./Header/header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        \n        <div>\n          <Header/>\n         \n        <main>{children}</main>\n         \n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}